# Generated by Django 4.2.13 on 2025-07-07 23:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django_ckeditor_5.fields
import django_resized.forms
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('seo_title', models.CharField(blank=True, help_text="(e.g., 'Henry Danger S1 EP20 - Series Download'). If left blank, the main title will be used.", max_length=255, null=True)),
                ('thumbnail', django_resized.forms.ResizedImageField(blank=True, crop=None, force_format=None, help_text='Upload featured image (recommended size: 300x450px)', keep_meta=True, null=True, quality=85, scale=None, size=[300, 450], upload_to='thumbnails/')),
                ('content', django_ckeditor_5.fields.CKEditor5Field(verbose_name='Text')),
                ('excerpt', models.TextField(blank=True, help_text='A brief summary of the post, used for previews (e.g., on index pages, social media, Telegram).')),
                ('views', models.IntegerField(default=0)),
                ('enable_downloads', models.BooleanField(default=True, help_text='Show download section for this post')),
                ('download_section_title', models.CharField(blank=True, default='Download Links', max_length=100)),
                ('download_button_text', models.CharField(blank=True, default='Download Now', max_length=50)),
                ('download_url', models.URLField(blank=True)),
                ('subtitle_url', models.URLField(blank=True)),
                ('subtitle_button_text', models.CharField(blank=True, default='Download Subtitle', max_length=50)),
                ('published_date', models.DateTimeField(auto_now_add=True)),
                ('is_published', models.BooleanField(default=True)),
                ('author', models.ForeignKey(default=2, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.category')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
        ),
        migrations.CreateModel(
            name='MyCustomTag',
            fields=[
            ],
            options={
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('taggit.tag',),
        ),
        migrations.CreateModel(
            name='Subtitle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language', models.CharField(max_length=50)),
                ('download_url', models.URLField()),
                ('is_auto_generated', models.BooleanField(default=False)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subtitles', to='core.post')),
            ],
        ),
        migrations.CreateModel(
            name='HomepageSection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('enabled', models.BooleanField(default=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
                ('categories', models.ManyToManyField(blank=True, to='core.category')),
            ],
            options={
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='DownloadQuality',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quality', models.CharField(choices=[('360p', 'DOWNLOAD MOVIE [360p]'), ('480p', 'DOWNLOAD MOVIE [480p]'), ('720p', 'DOWNLOAD MOVIE [720p (HD)]'), ('1080p', 'DOWNLOAD MOVIE 1080p (FHD)]'), ('4K', 'DOWNLOAD [4K (UHD)]'), ('EP1', 'DOWNLOAD EPISODE 1'), ('EP2', 'DOWNLOAD EPISODE 2'), ('EP3', 'DOWNLOAD EPISODE 3'), ('EP4', 'DOWNLOAD EPISODE 4'), ('EP5', 'DOWNLOAD EPISODE 5'), ('EP6', 'DOWNLOAD EPISODE 6'), ('EP7', 'DOWNLOAD EPISODE 7'), ('EP8', 'DOWNLOAD EPISODE 8'), ('EP9', 'DOWNLOAD EPISODE 9'), ('EP10', 'DOWNLOAD EPISODE 10'), ('EP11', 'DOWNLOAD EPISODE 11'), ('EP12', 'DOWNLOAD EPISODE 12'), ('EP13', 'DOWNLOAD EPISODE 13'), ('EP14', 'DOWNLOAD EPISODE 14'), ('EP15', 'DOWNLOAD EPISODE 15'), ('EP16', 'DOWNLOAD EPISODE 16'), ('EP17', 'DOWNLOAD EPISODE 17'), ('EP18', 'DOWNLOAD EPISODE 18'), ('EP19', 'DOWNLOAD EPISODE 19'), ('EP20', 'DOWNLOAD EPISODE 20'), ('EP21', 'DOWNLOAD EPISODE 21'), ('EP22', 'DOWNLOAD EPISODE 22'), ('EP23', 'DOWNLOAD EPISODE 23'), ('EP24', 'DOWNLOAD EPISODE 24'), ('EP25', 'DOWNLOAD EPISODE 25'), ('EP26', 'DOWNLOAD EPISODE 26'), ('EP27', 'DOWNLOAD EPISODE 27'), ('EP28', 'DOWNLOAD EPISODE 28'), ('EP29', 'DOWNLOAD EPISODE 29'), ('EP30', 'DOWNLOAD EPISODE 30'), ('EP31', 'DOWNLOAD EPISODE 31'), ('EP32', 'DOWNLOAD EPISODE 32'), ('EP33', 'DOWNLOAD EPISODE 33'), ('EP34', 'DOWNLOAD EPISODE 34'), ('EP35', 'DOWNLOAD EPISODE 35'), ('EP36', 'DOWNLOAD EPISODE 36'), ('EP37', 'DOWNLOAD EPISODE 37'), ('EP38', 'DOWNLOAD EPISODE 38'), ('EP39', 'DOWNLOAD EPISODE 39'), ('EP40', 'DOWNLOAD EPISODE 40')], max_length=10)),
                ('download_url', models.URLField()),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('is_premium', models.BooleanField(default=False)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='qualities', to='core.post')),
            ],
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254)),
                ('comment', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.post')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
                'ordering': ['-created_at'],
            },
        ),
    ]
